{
  "name":"pyplot-demo",
  "parallelism":"SERIAL",
  "version":"0.2.0",
  "label":"PyPlot Demo (Advanced)",
  "shortDescription":"Demonstration plotting app",
  "longDescription":"Uses matplotlib create graphs using Python",
  "defaultMemory":1,
  "defaultMemoryPerNode":1,
  "defaultProcessors":1,
  "defaultQueue":"debug",
  "deploymentPath":"vaughn/applications/pyplot-demo-0.2.0",
  "deploymentSystem":"data.iplantcollaborative.org",
  "executionSystem":"docker.iplantcollaborative.org",
  "executionType":"CLI",
  "templatePath":"wrapper.sh",
  "testPath":"test.sh",
  "checkpointable":false,
  "helpURI": "https://github.com/iPlantCollaborativeOpenSource/Advanced_iPlant/",
  "modules":[],
  "tags":[
    "demo",
    "Python",
    "tutorial",
    "plotting"
  ],
  "ontology":[],
  "inputs":[
    {
      "id":"dataset",
      "value":{
        "default":"agave://data.iplantcollaborative.org/dooley/inputs/pyplot/testdata.csv",
        "type":"string",
        "validator":"([^\\s]+(\\.(?i)(zip|gz|tgz|tar.gz|bz2|rar|csv))$)",
        "visible":true,
        "required":true,
        "enquote":true
      },
      "details":{
        "label":"Dataset",
        "description":"The CSV data set to plot. Can be compressed.",
        "argument":null,
        "showArgument":false,
        "repeatArgument":true
      },
      "semantics":{
        "ontology":[
          "http://sswapmeet.sswap.info/mime/text/Csv",
          "http://sswapmeet.sswap.info/mime/text/Zip",
          "http://sswapmeet.sswap.info/mime/text/Tar",
          "http://sswapmeet.sswap.info/mime/text/Bzip",
          "http://sswapmeet.sswap.info/mime/text/Rar"
        ],
        "minCardinality":1,
        "maxCardinality":-1,
        "fileTypes":[
          "csv-0",
          "zip-0",
          "tar-0",
          "tgz-0",
          "bz-2",
          "rar-0"
        ]
      }
    }
  ],
  "parameters":[
    {
      "id":"unpackInputs",
      "details":{
        "label":"Unpack input(s)",
        "description":"If true, any compressed input files will be expanded prior to execution on the remote system.",
        "argument":"1",
        "showArgument":true
      },
      "value":{
        "default":false,
        "type":"flag",
        "visible":true,
        "required":false
      },
      "semantics":{
        "ontology":[
          "xs:boolean"
        ],
        "minCardinality":0,
        "maxCardinality":1
      }
    },
    {
      "id":"chartType",
      "value":{
        "default":"bar",
        "type":"string",
        "visible":true,
        "required":true,
        "enquote":false
      },
      "details":{
        "label":"Chart type",
        "description":"Valid values: bar line",
        "argument":null,
        "showArgument":false,
        "repeatArgument":false
      },
      "semantics":{
        "ontology":[
          "xs:string"
        ],
        "minCardinality":1,
        "maxCardinality":2
      }
    },
    {
      "id":"xlabel",
      "value":{
        "default":"Time",
        "type":"string",
        "validator":"",
        "visible":true,
        "required":false,
        "enquote":true
      },
      "details":{
        "label":"X-axis label",
        "description":"Label to display below the X-axis",
        "argument":"--x-label=",
        "showArgument":true,
        "repeatArgument":false
      },
      "semantics":{
        "ontology":[
          "xs:string"
        ],
        "minCardinality":0,
        "maxCardinality":1
      }
    },
    {
      "id":"showXLabel",
      "value":{
        "default":true,
        "type":"flag",
        "validator":"",
        "visible":true,
        "required":false
      },
      "details":{
        "label":"Show x-axis label?",
        "description":"Select whether a label will be shown on the X axis",
        "argument":"--show-x-label",
        "showArgument":true,
        "repeatArgument":false
      },
      "semantics":{
        "ontology":[
          "xs:boolean"
        ],
        "minCardinality":0,
        "maxCardinality":1
      }
    },
    {
      "id":"ylabel",
      "value":{
        "default":"Magnitude",
        "type":"string",
        "validator":"",
        "visible":true,
        "required":false,
        "enquote":true
      },
      "details":{
        "label":"Y-axis label",
        "description":"Label to display below the y-axis",
        "argument":"--y-label=",
        "showArgument":true,
        "repeatArgument":false
      },
      "semantics":{
        "ontology":[
          "xs:string"
        ],
        "minCardinality":0,
        "maxCardinality":1
      }
    },
    {
      "id":"showYLabel",
      "value":{
        "default":true,
        "type":"flag",
        "validator":"",
        "visible":true,
        "required":false,
        "enquote":false
      },
      "details":{
        "label":"Show y-axis label?",
        "description":"Select whether a label will be shown on the Y axis",
        "argument":"--show-y-label",
        "showArgument":true,
        "repeatArgument":false
      },
      "semantics":{
        "ontology":[
          "xs:boolean"
        ],
        "minCardinality":0,
        "maxCardinality":1
      }
    },
    {
      "id":"showLegend",
      "value":{
        "default":false,
        "type":"flag",
        "validator":"",
        "visible":true,
        "required":false,
        "enquote":false
      },
      "details":{
        "label":"Display chart legends",
        "description":"Select whether to include a legend in each chart",
        "argument":"--show-legend",
        "showArgument":true,
        "repeatArgument":false
      },
      "semantics":{
        "ontology":[
          "xs:string"
        ],
        "minCardinality":0,
        "maxCardinality":1
      }
    },
    {
      "id":"separateCharts",
      "value":{
        "default":false,
        "type":"flag",
        "validator":"",
        "visible":true,
        "required":false,
        "enquote":false
      },
      "details":{
        "label":"One chart per series",
        "description":"Generate one chart for each data column",
        "argument":"--file-per-series",
        "showArgument":true,
        "repeatArgument":false
      },
      "semantics":{
        "ontology":[
          "xs:boolean"
        ],
        "minCardinality":0,
        "maxCardinality":1
      }
    },
    {
      "id":"height",
      "value":{
        "default":512,
        "type":"number",
        "validator":"\\d+",
        "visible":true,
        "required":false,
        "enquote":false
      },
      "details":{
        "label":"Chart height (px)",
        "description":"The height in pixels of each chart",
        "argument":"--height=",
        "showArgument":true,
        "repeatArgument":false
      },
      "semantics":{
        "ontology":[
          "xs:integer"
        ],
        "minCardinality":0,
        "maxCardinality":1
      }
    },
    {
      "id":"width",
      "value":{
        "default":1024,
        "type":"number",
        "validator":"\\d+",
        "visible":true,
        "required":false,
        "enquote":false
      },
      "details":{
        "label":"Chart width (px)",
        "description":"The width in pixels of each chart",
        "argument":"--width=",
        "showArgument":true,
        "repeatArgument":false
      },
      "semantics":{
        "ontology":[
          "xs:integer"
        ],
        "minCardinality":0,
        "maxCardinality":1
      }
    },
    {
      "id":"background",
      "value":{
        "default":"#FFFFFF",
        "type":"string",
        "validator":"^#(?:[0-9a-fA-F]{6}){1}$",
        "visible":true,
        "required":false,
        "enquote":true
      },
      "details":{
        "label":"Background color",
        "description":"The hexadecimal background color of the charts. White by default",
        "argument":"--background=",
        "showArgument":true,
        "repeatArgument":false
      },
      "semantics":{
        "ontology":[
          "xs:string"
        ],
        "minCardinality":0,
        "maxCardinality":1
      }
    }
  ]
}
